[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ project_name }}"
version = "0.1.0"
description = "A Python project following Sympulse coding standards"
readme = "README.md"
license = { text = "{{ license }}" }
authors = [{ name = "{{ author_name }}", email = "{{ author_email }}" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: {{ license }} License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
dev = [
  "black>=23.0.0",
  "isort>=5.12.0",
  "flake8>=6.0.0",
  "mypy>=1.0.0",
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
  "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/{{ project_name }}"
Repository = "https://github.com/yourusername/{{ project_name }}"
Documentation = "https://github.com/yourusername/{{ project_name }}#readme"

[tool.hatch.build.targets.wheel]
packages = ["src/{{ project_name }}"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["{{ project_name }}"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/{{ project_name }} --cov-report=term-missing --cov-report=html"

